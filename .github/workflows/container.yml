name: ci-docker

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main

jobs:
  build_validate:
    # if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: '5.x'
    
      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.7
        with:
          useConfigFile: true

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/gorest-template:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/gorest-template:${{ steps.gitversion.outputs.majorMinorPatch }}

  deploy:
    if: github.event_name == 'push'
    needs: [build_validate]
    runs-on: ubuntu-latest
    steps:
      - name: Azure login
        id: login
        uses: azure/login@v1.4.3
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set AKS context
        id: set-context
        uses: azure/aks-set-context@v3
        with:
          resource-group: '${{ secrets.AZURE_RESOURCE_GROUP }}' 
          cluster-name: '${{ secrets.AZURE_CLUSTER_NAME }}'

      - name: Setup kubectl
        id: install-kubectl
        uses: azure/setup-kubectl@v3

      - name: Deploy to AKS
        id: deploy-aks
        uses: Azure/k8s-deploy@v4
        with:
          namespace: 'default'
          manifests: |
             db-configmap.yaml
             db-pvp.yaml
             db-pv.yaml
             db-deployment.yaml
             db-service.yaml
             app-configmap.yaml
             app-deployment.yaml
             app-service.yaml
          images: '${{ secrets.DOCKERHUB_USERNAME }}/gorest-template:${{ jobs.build_validate.steps.gitversion.outputs.majorMinorPatch }}'
          pull-images: false